# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags:
      - 'vPlayground-*'
      - 'vDev-*'
      - 'vTest-*'
      - 'vProd-*'
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.vars.outputs.environment }}
      manifest: ${{ steps.vars.outputs.manifest }}
      workflow-result: ${{ steps.run.outputs.workflow-result }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Define environment based on git tag
        id: vars
        shell: bash
        run: |
          case $GITHUB_REF_NAME in
            vPlayground-*)
              ENVIRONMENT="playground"
              MANIFEST="playground"
              ;;
            vDev-*)
              ENVIRONMENT="gis-dev"
              MANIFEST="dev"
              ;;
            vTest-*)
              ENVIRONMENT="gis-test"
              MANIFEST="test"
              ;;
            vProd-*)
              ENVIRONMENT="gis-prod"
              MANIFEST="prod"
              ;;
            *)
              echo "Error! The environment is not recognized: $GITHUB_REF_NAME"
              exit 1
              ;;
          esac
          echo "MANIFEST=$(echo $MANIFEST)" >> $GITHUB_OUTPUT
          echo "ENVIRONMENT=$(echo $ENVIRONMENT)" >> $GITHUB_OUTPUT
      - name: Get env
        run: |
          echo "Manifest is ${{ steps.vars.outputs.MANIFEST }}"
          echo "Environment is ${{ steps.vars.outputs.ENVIRONMENT }}"

